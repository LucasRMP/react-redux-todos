{"version":3,"sources":["store/index.js","tools/localStorage.js","components/TodosList/index.js","components/AddForm/index.js","App.js","index.js"],"names":["INITIAL_STATE","rawState","localStorage","getItem","JSON","parse","err","lsHandler","todos","store","createStore","state","action","type","todo","filter","connect","todoList","dispatch","removeTodo","useEffect","serializedState","stringify","setItem","saveState","map","key","onClick","createTodo","useState","setTodo","value","onChange","e","target","preventDefault","App","className","ReactDOM","render","document","getElementById"],"mappings":"6NAIMA,ECJmB,WACvB,IACE,IAAMC,EAAWC,aAAaC,QAAQ,SACtC,GAAiB,OAAbF,EAAmB,OACvB,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDFkBC,IAAyB,CAC7CC,MAAO,CACL,iBACA,iBACA,iBACA,mBAsBWC,EAFDC,aAhBA,WAAoC,IAAnCC,EAAkC,uDAA1BX,EAAeY,EAAW,uCAC/C,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,eAAKF,EAAZ,CAAmBH,MAAM,GAAD,mBAAMG,EAAMH,OAAZ,CAAmBI,EAAOE,SAEpD,IAAK,cACH,OAAO,eACFH,EADL,CAEEH,MAAOG,EAAMH,MAAMO,QAAO,SAAAD,GAAI,OAAIA,IAASF,EAAOE,UAGtD,QACE,OAAOH,MEMEK,eATS,SAAAL,GAAK,MAAK,CAChCM,SAAUN,EAAMH,MAChBG,YAGyB,SAAAO,GAAQ,MAAK,CACtCC,WAAY,SAAAL,GAAI,OAAII,EAAS,CAAEL,KAAM,cAAeC,aAGvCE,EA1BG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUE,EAAwB,EAAxBA,WAAYR,EAAY,EAAZA,MAKzC,OAJAS,qBAAU,YDIa,SAAAT,GACvB,IACE,IAAMU,EAAkBjB,KAAKkB,UAAUX,GACvCT,aAAaqB,QAAQ,QAASF,GAC9B,WCPAG,CAAUb,KACT,CAACA,IAGF,4BACGM,EAASQ,KAAI,SAAAX,GAAI,OAChB,wBAAIY,IAAKZ,GACNA,EAAO,KACR,4BAAQa,QAAS,kBAAMR,EAAWL,KAAlC,a,QCSKE,cAAQ,MAJI,SAAAE,GAAQ,MAAK,CACtCU,WAAY,SAAAd,GAAI,OAAII,EAAS,CAAEL,KAAM,WAAYC,aAGpCE,EArBC,SAAC,GAAoB,IAAlBY,EAAiB,EAAjBA,WAAiB,EACVC,mBAAS,IADC,mBAC3Bf,EAD2B,KACrBgB,EADqB,KASlC,OACE,8BACE,2BAAOjB,KAAK,OAAOkB,MAAOjB,EAAMkB,SAAU,SAAAC,GAAC,OAAIH,EAAQG,EAAEC,OAAOH,UAChE,4BAAQJ,QATS,SAAAM,GACnBA,EAAEE,iBACFP,EAAWd,GACXgB,EAAQ,MAMN,WCISM,MAZf,WACE,OACE,yBAAKC,UAAU,OACb,qCACA,kBAAC,IAAD,CAAU5B,MAAOA,GACf,kBAAC,EAAD,MACA,kBAAC,EAAD,SCTR6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.61a1796a.chunk.js","sourcesContent":["import { createStore } from \"redux\";\n\nimport * as lsHandler from \"../tools/localStorage\";\n\nconst INITIAL_STATE = lsHandler.loadState() || {\n  todos: [\n    \"Do something 1\",\n    \"Do something 2\",\n    \"Do something 3\",\n    \"Do something 4\"\n  ]\n};\n\nconst todos = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return { ...state, todos: [...state.todos, action.todo] };\n\n    case \"REMOVE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo !== action.todo)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(todos);\n\nexport default store;\n","export const loadState = () => {\n  try {\n    const rawState = localStorage.getItem(\"todos\");\n    if (rawState === null) return undefined;\n    return JSON.parse(rawState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"todos\", serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { saveState } from \"../../tools/localStorage\";\n\nconst TodosList = ({ todoList, removeTodo, state }) => {\n  useEffect(() => {\n    saveState(state);\n  }, [state]);\n\n  return (\n    <ul>\n      {todoList.map(todo => (\n        <li key={todo}>\n          {todo + \"  \"}\n          <button onClick={() => removeTodo(todo)}>X</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = state => ({\n  todoList: state.todos,\n  state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeTodo: todo => dispatch({ type: \"REMOVE_TODO\", todo })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosList);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AddForm = ({ createTodo }) => {\n  const [todo, setTodo] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createTodo(todo);\n    setTodo(\"\");\n  };\n\n  return (\n    <form>\n      <input type=\"text\" value={todo} onChange={e => setTodo(e.target.value)} />\n      <button onClick={handleSubmit}>ADD</button>\n    </form>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  createTodo: todo => dispatch({ type: \"ADD_TODO\", todo })\n});\n\nexport default connect(null, mapDispatchToProps)(AddForm);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\nimport TodosList from \"./components/TodosList\";\nimport AddForm from \"./components/AddForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Todos</h1>\n      <Provider store={store}>\n        <TodosList />\n        <AddForm />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}